<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
      <groupId>org.tianlangstudio.data.hamal</groupId>
      <artifactId>data-hamal</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
  </parent>
  <groupId>org.tianlangstudio.data.hamal</groupId>
  <artifactId>hamal-yarn</artifactId>
  <packaging>jar</packaging>
  <name>Data Hamal On Yarn</name>
  <url>https://github.com/TianLangStudio/DataXServer</url>
  <inceptionYear>2019</inceptionYear>
  <dependencies>
     <dependency>
          <groupId>org.tianlangstudio.data.hamal</groupId>
          <artifactId>hamal-common</artifactId>
          <version>${data-hamal-version}</version>
      </dependency>
      <dependency>
          <groupId>org.tianlangstudio.data.hamal</groupId>
          <artifactId>hamal-core</artifactId>
          <version>${data-hamal-version}</version>
      </dependency>
      <dependency>
          <groupId>org.tianlangstudio.data.hamal</groupId>
          <artifactId>hamal-thrift-server</artifactId>
          <version>${data-hamal-version}</version>
      </dependency>
      <dependency>
          <groupId>org.tianlangstudio.data.hamal</groupId>
          <artifactId>hamal-http-server</artifactId>
          <version>${data-hamal-version}</version>
      </dependency>
      <dependency>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-library</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-compiler</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.apache.thrift</groupId>
          <artifactId>libthrift</artifactId>
      </dependency>
      <dependency>
          <groupId>com.alibaba.datax</groupId>
          <artifactId>datax-transformer</artifactId>
      </dependency>
      <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-pool2</artifactId>
      </dependency>
      <dependency>
          <groupId>${akka.group}</groupId>
          <artifactId>akka-http_${scala.binary.version}</artifactId>
      </dependency>
<!--      <dependency>
          <groupId>${akka.group}</groupId>
          <artifactId>akka-http-spray-json_${scala.binary.version}</artifactId>
          <version>${akka.http.version}</version>
      </dependency>-->
    <!--  <dependency>
          <groupId>${akka.group}</groupId>
          <artifactId>akka-http-testkit_${scala.binary.version}</artifactId>
          <scope>test</scope>
      </dependency>-->
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
      </dependency>
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>${logback-version}</version>
      </dependency>
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
          <version>${logback-version}</version>
      </dependency>
      <!--<dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>2.3</version>
          <type>pom</type>
      </dependency>
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>2.3</version>
      </dependency>
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <version>2.3</version>
      </dependency>-->
      <dependency>
          <groupId>org.apache.directory.studio</groupId>
          <artifactId>org.apache.commons.lang</artifactId>

      </dependency>
      <dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>

      </dependency>
      <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-client</artifactId>

      </dependency>
      <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-server-tests</artifactId>
          <classifier>tests</classifier>
      </dependency>
      <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <scope>provided</scope>
          <exclusions>
              <exclusion>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-log4j12</artifactId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-server-tests</artifactId>
      </dependency>
      <dependency>
          <groupId>org.dom4j</groupId>
          <artifactId>dom4j</artifactId>

      </dependency>
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest_${scala.binary.version}</artifactId>
          <version>3.2.0-M1</version>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>${akka.group}</groupId>
          <artifactId>akka-remote_${scala.binary.version}</artifactId>
          <version>${akka.version}</version>
      </dependency>
      <dependency>
          <groupId>${akka.group}</groupId>
          <artifactId>akka-slf4j_${scala.binary.version}</artifactId>
          <version>${akka.version}</version>
      </dependency>
      <dependency>
          <groupId>${akka.group}</groupId>
          <artifactId>akka-testkit_${scala.binary.version}</artifactId>
          <version>${akka.version}</version>
          <scope>test</scope>
      </dependency>

      <!--dependency>
          <groupId>org.mapdb</groupId>
          <artifactId>mapdb</artifactId>
          <version>2.0-beta2</version>
      </dependency-->
  </dependencies>
  <build>
      <resources>
          <resource>
              <directory>src/main/resources</directory>
          </resource>
      </resources>
      <testResources>
          <testResource>
              <directory>src/test/resources</directory>
          </testResource>
      </testResources>
      <outputDirectory>target/scala-${scala.binary.version}/classes</outputDirectory>
      <testOutputDirectory>target/scala-${scala.binary.version}/test-classes</testOutputDirectory>
<!--
      <resources>
          <resource>
              <directory>src/main/resources</directory>
              <targetPath>${project.build.directory}/server_conf</targetPath>
              <excludes>
                  <exclude>**/*.java</exclude>
                  <exclude>**/assembly.xml</exclude>
              </excludes>
          </resource>
          <resource>
              <directory>src/main/test_resources</directory>
              <targetPath>${project.build.directory}/scala-${scala.binary.version}/test-classes</targetPath>
              <excludes>
                  <exclude>**/*.java</exclude>
                  <exclude>**/assembly.xml</exclude>
              </excludes>
          </resource>

      </resources>-->
    <plugins>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12.4</version>
        <configuration>
            <forkMode>once</forkMode>
            <argLine>-Dfile.encoding=UTF-8</argLine>
        </configuration>
    </plugin>

        <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9.1</version>
        <executions>
        <!--execution>
            <id>add-default-sources</id>
            <phase>generate-sources</phase>
            <goals>
                <goal>add-source</goal>
            </goals>
            <configuration>
                <sources>
                    <source>v${hive.version.short}/src/main/scala</source>
                </sources>
            </configuration>
        </execution-->
        <execution>
        <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
                <goal>add-source</goal>
            </goals>
            <configuration>
                <sources>
                    <source>src/main/thrift/gen-java</source>
                </sources>
            </configuration>
        </execution>
        </executions>
        </plugin>

        <!--plugin>
        <groupId>org.apache.thrift.tools</groupId>
        <artifactId>maven-thrift-plugin</artifactId>
        <version>0.1.11</version>
        <configuration>
            <thriftExecutable>D:\\java\\thrift\\thrift-0.9.3.exe</thriftExecutable>
        </configuration>
        <executions>
            <execution>
                <id>thrift-sources</id>
                <phase>generate-sources</phase>
                <goals>
                    <goal>compile</goal>
                </goals>
            </execution>
            <execution>
                <id>thrift-test-sources</id>
                <phase>generate-test-sources</phase>
                <goals>
                    <goal>testCompile</goal>
                </goals>
            </execution>
        </executions>
      </plugin-->
        <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <version>3.2.2</version>
            <executions>
                <execution>
                    <id>eclipse-add-source</id>
                    <goals>
                        <goal>add-source</goal>
                    </goals>
                </execution>
                <execution>
                    <id>scala-compile-first</id>
                    <phase>process-resources</phase>
                    <goals>
                        <goal>compile</goal>
                    </goals>
                </execution>
                <execution>
                    <id>scala-test-compile-first</id>
                    <phase>process-test-resources</phase>
                    <goals>
                        <goal>testCompile</goal>
                    </goals>
                </execution>
                <execution>
                    <id>attach-scaladocs</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>doc-jar</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <scalaVersion>${scala.version}</scalaVersion>
                <recompileMode>incremental</recompileMode>
                <useZincServer>true</useZincServer>
                <args>
                    <arg>-unchecked</arg>
                    <arg>-deprecation</arg>
                    <arg>-feature</arg>
                </args>
                <jvmArgs>
                    <jvmArg>-Xms1024m</jvmArg>
                    <jvmArg>-Xmx1024m</jvmArg>
                    <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
                    <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
                    <jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>
                    <jvmArg>-Dfile.encoding=UTF-8</jvmArg>
                </jvmArgs>
                <javacArgs>
                    <javacArg>-source</javacArg>
                    <javacArg>${java.version}</javacArg>
                    <javacArg>-target</javacArg>
                    <javacArg>${java.version}</javacArg>
                    <javacArg>-Xlint:all,-serial,-path</javacArg>
                </javacArgs>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.3</version>
            <configuration>
                <source>${java.version}</source>
                <target>${java.version}</target>
                <encoding>UTF-8</encoding>
                <maxmem>1024m</maxmem>
                <fork>true</fork>
                <compilerArgs>
                    <arg>-Xlint:all,-serial,-path</arg>
                </compilerArgs>
            </configuration>
        </plugin>
        <plugin>
            <!-- NOTE: We don't need a groupId specification because the group is
                org.apache.maven.plugins ...which is assumed by default. -->
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.4</version>
            <configuration>
                <descriptors>
                    <descriptor>src/main/resources/assembly.xml</descriptor>
                </descriptors>
                <descriptorRefs>
                    <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
            </configuration>
            <executions>
                <execution>
                    <id>make-assembly</id> <!-- this is used for inheritance merges -->
                    <phase>package</phase> <!-- bind to the packaging phase -->
                    <goals>
                        <goal>single</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
        <!--<plugin>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest-maven-plugin</artifactId>
            <version>1.0</version>
            <configuration>
                <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                <junitxml>.</junitxml>
                <filereports>WDF TestSuite.txt</filereports>
            </configuration>
            <executions>
                <execution>
                    <id>test</id>
                    <goals>
                        <goal>test</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>-->
    </plugins>
  </build>
</project>
